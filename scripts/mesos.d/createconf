#!/bin/bash
#
# Create conf file for Apache Mesos installation
#

sourceconf "$PREP_CONF"

IP_DETECT="./conf/ip-detect"
ME=$(whoami)

if [ "$ME" != "$IUSER" ]; then
    @go.log FATAL "Currentling running as $ME. Scripts need to be run as $IUSER. Please connect to the init node as $IUSER via $ ssh -i $OUT_KEY $IUSER@$INIT_NODE"
fi



echo ""
echo "Prior to starting Mesos Conf, it's important that your node prep was successful. We will run ./zeta prep status now to show you the prep status."
echo ""
echo ""
./zeta prep status
echo ""
echo ""
echo ""
echo "All nodes should be up, should return the same kernel version, the same docker version, and show that the sudo test was successful"
echo "If this is not the case, please run ./zeta prep install -n=172.31.x.x where 172.31.x.x is the IP of the node that is not the same as the others"
echo ""
read -e -p "Do you wish to exit now to fix any issues in prep? (Y/N): " -i "N" QUIT
if [ "$QUIT" == "Y" ]; then
    @go.log FATAL "Exiting per user request"
fi

####################################################################################################################################################################
echo ""
echo "-----------------------------------"
echo "This process will ask a series of questions in order to create a mesos.conf script for gettings nodes ready for Zeta"
echo "The configuration will be located: $MESO_CONF"
echo "-----------------------------------"
echo ""
@go.log INFO "Creating IP Detect Script"
./zeta mesos createipdetect "$IP_DETECT"


echo ""
echo "This is the current node list:"
echo ""
INTERNAL_NODES=""
for NODE in $NODES; do
    scp -o StrictHostKeyChecking=no $IP_DETECT $NODE:/tmp/ip-detect > /dev/null 2>&1
    INTERNAL=$(ssh -o StrictHostKeyChecking=no $NODE "/tmp/ip-detect" 2> /dev/null)
    INIT_N="N"
    if [ "$INTERNAL_NODES" == "" ]; then
       INTERNAL_NODES=""
    else
       INTERNAL_NODES="${INTERNAL_NODES} "
    fi
    INTERNAL_NODES="${INTERNAL_NODES}${INTERNAL}"

    if [ "$NODE" == "$INIT_NODE" ]; then
        INIT_N="Y"
        INIT_INTERNAL_IP="$INTERNAL"
    fi
    echo "Init: $INIT_N - External IP: $NODE - Internal_IP: $INTERNAL"
done
echo ""
echo ""
echo "We need to understand what nodes will be master nodes - Any Nodes not specified as master nodes will be come agent nodes."
REMAINING_NODES="$INTERNAL_NODES"
echo ""
echo "Picking an odd number of nodes is best. 1 for a test cluster. 3 For decent size clusters, 5 for large installations. This is difficult to change at a later time, 3 should be suffcient for most things"
echo "The list of remaining nodes is below, please enter the list of master nodes, separated by spaces"
echo ""
echo "$REMAINING_NODES"
echo
read -e -p "Please enter list of master node(s) using space to separate (Internal IPS): " MASTER_NODES
echo ""
echo "Please enter a cluster name"
echo ""
read -e -p "Cluster name: " -i "mydcos" CLUSTERNAME
echo ""
echo "Please enter a POSIX client base mount point. This will be used, with the clustername as the basis for posix interaction with your shared filesystem"
echo ""
read -e -p "Cluster Mount point: " -i "zeta" CLUSTERBASE
echo ""
echo "Your cluster base is: $CLUSTERBASE"
echo "Your cluster name is: $CLUSTERNAME"
CLUSTERMOUNT="/$CLUSTERBASE/$CLUSTERNAME"
echo "Your cluster posix mount point is $CLUSTERMOUNT"
echo ""
echo "DNS Resolution"
echo "This is needed for external DNS resolution, defaults are examples from an AWS region, please enure the resolve it correct for your installation"
echo ""
echo "For assistance, here is your /etc/resolv.conf:"
echo ""
cat /etc/resolv.conf
echo ""
echo ""
read -e -p "Space separated list of DNS resolver IPs: " -i "172.31.0.2" DNS_RESOLVERS
echo ""
read -e -p "DNS Search base: " -i "us-west-2.compute.internal" DNS_SEARCH
echo ""

echo ""
echo "Cluster proxies. If your cluster needs HTTP_PROXY information to connect to the Internet, now is the time to enter that"
echo "We will ask for both Proxy information, as well as NOPROXY information"
echo ""
echo "---------------------------------------"
echo "If you need to specify a HTTP_PROXY for docker building, please enter it here"
echo "If this variable is filled, it will add the proxy lines to the docker files for building the images"
echo ""
read -p "Enter the proxy information (blank for none): " DOCKER_PROXY

echo ""
echo "---------------------------------------"
echo "If you need to specify a NO_PROXY string it's highly recommended. Use your subnets and internal domain names"
echo "Example: \"192.168.0.0/16,mycompany.com\""
echo ""
read -p "Enter the noproxy information (blank for none): " DOCKER_NOPROXY


AGENT_NODES="$INTERNAL_NODES"

for N in $MASTER_NODES; do
    AGENT_NODES=$(echo "$AGENT_NODES"| sed "s/$N//g"|sed -e 's/^[ \t]*//'|sed -e 's/[ \t]*$//'|sed -r "s/ {2,}/ /g")
done



cat > $MESOS_CONF << EOP
#!/bin/bash
DOCKER_PROXY="$DOCKER_PROXY"
DOCKER_NOPROXY="$DOCKER_NOPROXY"

CLUSTERBASE="$CLUSTERBASE"
CLUSTERNAME="$CLUSTERNAME"
CLUSTERMOUNT="$CLUSTERMOUNT"

DNS_RESOLVERS="$DNS_RESOLVERS"
DNS_SEARCH="$DNS_SEARCH"

INTERNAL_NODES="$INTERNAL_NODES"
MASTER_NODES="$MASTER_NODES"
AGENT_NODES="$AGENT_NODES"

INIT_INTERNAL_IP="$INIT_INTERNAL_IP"
IP_DETECT="$IP_DETECT"

MESOS_LOCKED="1"
EOP


echo ""
echo "Running ./zeta mesos sshhosts to trust keys of nodes provided"
echo ""
./zeta mesos sshhosts
echo ""
