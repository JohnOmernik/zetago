#!/bin/bash
#
# Start an already installed package
#
# Arguments:
# -u                # Unattended Installation
# -s                # Search Additional Locations PRIOR to core package location (Default is to search and use core package location first)
# -r                # Rebuild image automatically if -u is passed and the image already exists
# %PACKAGENAME%     # The name of the package you wish to build
#
sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"
sourceconf "$FS_CONF"
sourceconf "$FS_PROVIDER_CONF"
sourceconf "$CLUSTER_CONF"
sourceconf "$CLUSTER_ZETACA_CONF"
sourceconf "$CLUSTER_BASE_CONF"
sourceconf "$PACKAGE_CONF"

reqshared "dockerregv2 zetaca openldap"

. "$_GO_USE_MODULES" 'libpackage'


function _packagestart() {

    MYDIR=$(pwd)

    UNATTEND="0"

  . $CLUSTERMOUNT/zeta/kstore/env/zeta_shared.sh

    ACTION_SRC="user"
    for i in "$@"
        do
        case $i in
            *)
            CONF_FILE="$i"
            # unknown option
            ;;
        esac
    done

    if [ ! -f "$CONF_FILE" ]; then
        @go.log FATAL "You must specify a path to a conf file - Provided: $CONF_FILE"
    fi
    . $CONF_FILE

    # Determine the package base
    getpackagebase "$APP_NAME" "0" "APP_PKG_BASE"

    if [ -f "$APP_PKG_BASE/start.sh" ]; then
        @go.log INFO "Using Package start.sh information"
        . $APP_PKG_BASE/start.sh
    else
        @go.log INFO "Using default start instance"
        if [ "$APP_MAR_FILE" != "DIRECTORY" ]; then
            submitstartsvc "RES" "$APP_MAR_ID" "$APP_MAR_FILE" "$MARATHON_SUBMIT"
            if [ "$RES" != "0" ]; then
                @go.log WARN "$MAR_ID not started - is it already running?"
            fi
            echo ""
        else
            if [ ! -d "$APP_MAR_DIR" ]; then
                @go.log FATAL "APP_MAR_FILE indicated a directory of marathon files, however, the directory $APP_MAR_DIR was not found"
            fi
            for MAR_FILE in $(ls -1 $APP_MAR_DIR); do
                MY_MAR_FILE="${APP_MAR_DIR}/${MAR_FILE}"
                MAR_ID=$(cat $MY_MAR_FILE|grep "\"id\""|sed "s/\"id\"://g"|sed -r "s/ +//g"|sed -r "s/[\",]//g")
                submitstartsvc "RES" "$MAR_ID" "$MY_MAR_FILE" "$MARATHON_SUBMIT"
                if [ "$RES" != "0" ]; then
                    @go.log WARN "$MAR_ID not started - is it already running?"
                fi
                echo ""
            done
        fi
    fi

    echo ""
    echo "If your package added EDGE ports now is the time to reload the firewall to expose those ports:"
    echo ""
    echo "$ ./zeta network deployfw -f=\"Reload of Firewall to add new EDGE Services from $APP_ID running in $APP_ROLE\""
    echo ""

}


_packagestart "$@"
