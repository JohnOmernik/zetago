#!/bin/bash

# uninstall a package for use with Zeta
#
# Arguments:
# -u                # Unattended Unnstallation
# %CONF_FILE%     # The path and location of the conf file for the instance you want to uninstall
#
sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"
sourceconf "$FS_CONF"
sourceconf "$FS_PROVIDER_CONF"
sourceconf "$CLUSTER_CONF"
sourceconf "$CLUSTER_ZETACA_CONF"
sourceconf "$CLUSTER_BASE_CONF"
sourceconf "$PACKAGE_CONF"

reqshared "dockerregv2 zetaca openldap"

. "$_GO_USE_MODULES" 'libpackage'


function _packageuninstall() {

    MYDIR=$(pwd)

    UNATTEND="0"

  . $CLUSTERMOUNT/zeta/kstore/env/zeta_shared.sh

    ACTION_SRC="user"
    for i in "$@"
        do
        case $i in
            -u)
            UNATTEND="1"
            ;;
            -d)
            DESTROY="1"
            ;;
            *)
            CONF_FILE="$i"
            # unknown option
            ;;
        esac
    done

    if [ ! -f "$CONF_FILE" ]; then
        @go.log FATAL "You must specify a installed package conf file location"
    fi
    . $CONF_FILE

    # Determine the package base
    getpackagebase "$APP_NAME" "0" "APP_PKG_BASE"

    if [ -f "$APP_PKG_BASE/uninstall.sh" ]; then
        @go.log INFO "Using Package uninstall.sh information"
        . $APP_PKG_BASE/uninstall.sh
    else
        if [ "$UNATTEND" == "1" ]; then
            CONFIRM="Y"
            if [ "$DESTROY" != "1" ]; then
                echo "*********************************"
                @go.log WARN "You have selected unattended uninstall with out the -d (Destroy) field. While your app will be uninstalled, the data will remain."
                echo "*********************************"

        else
            echo ""
            echo "You have requested to uninstall the instance $APP_ID in role $APP_ROLE of the applicaiton $APP_NAME"
            echo "Uninstall stops the app, removes it from Marathon, and removes the ENV files for the application but leaves data/conf available"
            echo ""

            if [ "$DESTROY" == "1" ]; then
                echo ""
                echo "********************************"
                echo ""
                echo "You have also selected to destroy and delete all data for this app in addition to uninstalling from the ENV variables and marathon" 
                echo ""
                echo "This is irreversible"
                echo ""
                echo "********************************"
                echo ""
            else
                echo "*********************************"
                @go.log WARN "You have selected uninstall with out the -d (Destroy) field. While your app will be uninstalled, the data will remain."
                echo "Since this is not an unattended uninstall, you have the option to Destroy you data here"
                read -e -p "When uninstalling, do you also wish to remove all data for this app? - This Action is irreversible (Y/N): " -i "N" CHK_DEST
                if [ "$CHK_DEST" == "Y" ]; then
                    @go.log WARN "Also Destroying data per user!"
                    DESTROY="1"
                fi
            fi

            read -e -p "Are you sure you wish to go on with this action? " -i "N" CONFIRM
        fi

        if [ "$CONFIRM" == "Y" ]; then
            @go.log WARN "Proceeding with uninstall of $APP_ID"

            @go.log INFO "Stopping $APP_ID"
            if [ "$APP_MAR_ID" != "" ]; then
                ./zeta package stop $CONF_FILE
            fi
            @go.log INFO "Removing ENV file at $APP_ENV_FILE"
            if [ -f "$APP_ENV_FILE" ]; then
                rm $APP_ENV_FILE
            fi
            @go.log INFO "Destroying $APP_MAR_ID in marathon"
            if [ "$APP_MAR_ID" != "" ]; then
                ./zeta cluster marathon destroy $APP_MAR_ID $MARATHON_SUBMIT 1
            fi
            @go.log INFO "Removeing ports for $APP_ID"
            APP_STR="${APP_ROLE}:${APP_ID}"
            sed -i "/${APP_STR}/d" ${SERVICES_CONF}

            @go.log WARN "$APP_NAME instance $APP_ID unininstalled"
            if [ "$DESTROY" == "1" ]; then
                @go.log WARN "Also removing all data for app"
                @go.log WARN "If volumes exist, we need to handle those"
                sudo rm -rf $APP_HOME
            fi

        else
            @go.log WARN "User canceled uninstall"
        fi
    fi
}


_packageuninstall "$@"
