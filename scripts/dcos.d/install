#!/bin/bash
#
# Install DCOS on Nodes in Zeta Cluster
#
# Arguments:
# -u            # No prompt of user  Install on all nodes given dcos and prep conf files
# -n=%NODE%     # Install on a specifc node. It will check to see if this node is a master or agent. If it's not a master, it will install the DCOS agent by default
#
# Usage:
# ./zeta dcos install -n=node1      # Install DCOS on the specified node given the config files. .
# ./zeta dcos install -n=node1 -p   # Install DCOS on the specified node given the config files. Also install as a public node
# ./zeta dcos install               # no argument runs on all nodes but checks with user
# ./zeta dcos install -u            # Run on all nodes, don't validate with user, just fire and forget
#
sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"

IP_DETECT="./conf/ip-detect"

if [ "$FW_FIRST_RUN" != "1" ]; then
    @go.log FATAL "Before Installing or Bootstrapping DCOS, it's required to run the network firewall deploy via ./zeta network deployfw"
fi



function _dcos_install() {
    ALL="1"
    UNATTEND="0"
    PUBLIC="0"
    for i in "$@"
       do
        case $i in
             -u)
             UNATTEND="1"
             ;;
             -p)
             PUBLIC="1"
             ;;
            "-n="*)
            HOST="${i#*=}"
            ;;
            *)
            # unknown option
            ;;
        esac
    done

    if [ "$HOST" != "" ]; then
        ALL="0"
    fi

    if [ "$ALL" == "1" ] && [ "$UNATTEND" == "0" ]; then
        read -e -p "Run DCOS install on nodes? (Y/N): " -i "N" INSTDCOS
        if [ "$INSTDCOS" != "Y" ]; then
            @go.log FATAL "User choose to cancel DCOS Install"
        fi
    fi
    BSTEST=$(curl -s http://${BOOTSTRAP_NODE}:${BOOTSTRAP_PORT})

    if [ "$BSTEST" == "" ]; then
        @go.log FATAL "Bootstrap node does not appear up or is inaccessible at http://${BOOTSTRAP_NODE}:${BOOTSTRAP_PORT}"
    fi


    if [ "$ALL" == "1" ]; then
        RUN_NODES="$INTERNAL_NODES"
    else
        scp -o StrictHostKeyChecking=no $IP_DETECT $HOST:/tmp/ip-detect > /dev/null 2>&1
        INTERNAL=$(ssh -o StrictHostKeyChecking=no $HOST "/tmp/ip-detect")
        addtoconfvar "$INTERNAL" " " "INTERNAL_NODES" "$DCOS_CONF"
        addtoconfvar "$INTERNAL" " " "AGENT_NODES" "$DCOS_CONF"

        echo "You are looking to add the host: $HOST (Internal IP: $INTERNAL)"
        echo "This node has already been added to the internal host list"
        echo "Since we cannot add masters at this time, Do you wish to install this as a slave_public node? (Answering anything except Y will do a standard agent install)"
        echo ""
        read -e -p "Install $INTERNAL with slave_public role? (Y/N): " -i "N" SPUBLIC

        if [ "$SPUBLIC" == "Y" ]; then
            addtoconfvar "$INTERNAL" " " "PUBLIC_NODES" "$DCOS_CONF"
            echo ""
            echo "Since we added this to PUBLIC_NODES, it's HIGHLY recommened you add this to the EDGE_NODES in $NETWORK_CONF"
            read -e -p "Add to EDGE_NODES in $NETWORK_CONF? (Y/N): " -i "Y" SEDGE
            if [ "$SEDGE" == "Y" ]; then
                @go.log INFO "Adding to EDGE_NODES in $NETWORK_CONF"
                addtoconfvar "$INTERNAL" " " "EDGE_NODES" "$NETWORK_CONF"
            else
                @go.log WARN "NODE $INTERNAL Added to Public nodes in $DCOS_CONF but not to EDGE_NODES in $NETWORK_CONF"
            fi
        fi
        sourceconf "$DCOS_CONF"
        RUN_NODES="$HOST"
    fi




    # First things first, we need to check if any the nodes that are coming through are master nodes. If it's all, there will obviously be master nodes there.
    EXT_MASTERS=""
    for NODE in $MASTER_NODES; do
        @go.log WARN "Run Nodes: $RUN_NODES"
        @go.log WARN "Node: $NODE"
        if [[ "$RUN_NODES" == *"$NODE"* ]]; then
            @go.log INFO "Initiating Master install on $NODE"
            EXT_IP=$(ssh -o StrictHostKeyChecking=no $NODE "curl -s icanhazip.com")
            EXT_MASTERS="${EXT_MASTERS} $EXT_IP"
            ssh -o StrictHostKeyChecking=no $NODE "mkdir -p /tmp/dcos && cd /tmp/dcos && curl -s -O http://${BOOTSTRAP_NODE}:${BOOTSTRAP_PORT}/dcos_install.sh"
            ssh -o StrictHostKeyChecking=no $NODE "$PRIV_CMD sh -c 'cd /tmp/dcos && nohup bash dcos_install.sh master > /dev/null 2>&1 &'" &
        fi
    done
    @go.log INFO "Master Server Install(s) initiated on all master nodes"
    echo "Master server installs running, when complete, you will be able to go to any master ip on port 80 and see DCOS running. Once this is done, press enter to continue (If this is not an initial install, then just press ok)"
    echo ""
    echo "Master Addresses:"
    echo ""
    for M in $EXT_MASTERS; do
        if [ "$M" != "" ]; then
            echo "DCOS:"
            echo ""
            echo "http://$M"
            echo ""
            echo ""
            echo "DCOS Exibitor:"
            echo ""
            echo "http://$M:8181"
        fi
    done
    echo ""

    DCOSTEST=""
    MASTERIP=$(echo "$MASTER_NODES"|cut -d" " -f1)
    DCOSTEST=$(curl -s http://$MASTERIP)
    while [ "$DCOSTEST" == "" ]; do
        sleep 10
        DCOSTEST=$(curl -s http://$MASTERIP)
        @go.log INFO "Waiting 10 seconds to check for presense of master DCOS running at http://$MASTERIP (Internal address)"
    done
    @go.log INFO "Masters up and running starting Agent installs"

    for NODE in $RUN_NODES; do
        if [[ "$MASTER_NODES" != *"$NODE"* ]]; then
            # This is an agent node so install now
            INSTSTR="slave" # Default
            if [[ "$PUBLIC_NODES" == *"$NODE"* ]]; then
                INSTSTR="slave_public"
            fi
            if [ "$ALL" == "0" ] && [ "$PUBLIC" == "1" ]; then
                INSTSTR="slave_public"
            fi
            @go.log INFO "Installing $INSTSTR agent on $NODE"
            ssh -o StrictHostKeyChecking=no $NODE "mkdir -p /tmp/dcos && cd /tmp/dcos && curl -O -s http://${BOOTSTRAP_NODE}:${BOOTSTRAP_PORT}/dcos_install.sh && sed -i \"s/systemctl restart docker/# systemctl restart docker/\" dcos_install.sh"
            ssh -o StrictHostKeyChecking=no $NODE "$PRIV_CMD sh -c 'cd /tmp/dcos && nohup bash dcos_install.sh $INSTSTR > /dev/null 2>&1 &'" &
        fi
    done
    echo ""
    @go.log INFO "DCOS Agents Initiated on all Agents"
    @go.log WARN 'Once Nodes are up an running please run: ./zeta network deployfw -f="Post DCOS FW Install"'
    if [ "$ALL" != "1" ]; then
        ./zeta dcos sshhosts -n="$HOST" -u
        ./zeta network deployfw -f="DCOS install onto $INTERNAL"
    fi
}

_dcos_install "$@"

