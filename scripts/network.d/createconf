#!/bin/bash
#
# Create conf file for  package management
#

sourceconf "$PREP_CONF"

sourceconf "$DCOS_CONF"

echo "This Conf Creation will make the network configuration script for Zeta."
echo ""


TDNS=$(echo "$DNS_RESOLVERS"|tr " " ",")

if [ "$DCOS" != "0" ]; then
    if [ "$TDNS" != "" ]; then
        DNS_SERVERS="198.51.100.1,198.51.100.2,198.51.100.3,${TDNS}"
    else
        DNS_SERVERS="198.51.100.1,198.51.100.2,198.51.100.3"
    fi
else
    @go.log INFO "No DCOS"
    DNS_SERVERS=$(echo "$MASTER_NODES"|tr " " ",")
    DNS_SERVERS="${DNS_SERVERS},${TDNS}"
fi
echo "The Zeta DNS Servers are $DNS_SERVERS"
echo "You should not need to add additional DNS Servers."
echo ""
echo "What NTP Servers are your cluster servers using? (CSV)"
echo ""
read -e -p "Enter NTP Servers for outbound access, or leave blank: " NTP_SERVERS
echo ""
echo "Using CIDR Notation (such as 192.168.0.0/24) Please enter the CIDR for the routable addresses on each node (only one)"
echo ""
read -e -p "Zeta Routable addressess (CIDR): " -i "172.31.0.0/16"  ZETA_CIDR_ROUTABLE
echo ""
echo "If you have additional interfaces that are non-routable (for node-to-node communication) Please enter the addresses here. If you have more than one, just enter with commans in between: Example: 192.168.1.0/24,192.168.2.0/24"
echo ""
read -e -p "Zeta non-routaable (node-to-node) (this can be blank): " ZETA_CIDR_NONROUTABLE
echo ""
DOCKER_CIDR=172.16.0.0/12
echo "The following CIDRs are default to Zeta:"
echo "Docker: $DOCKER_CIDR"
if [ "$DCOS" != "0" ]; then
    DCOS_CIDR=9.0.0.0/8
    SPARTAN_CIDR=192.50.0.0/15
    echo "DCOS: $DCOS_CIDR"
    echo "SPARTAN: $SPARTAN_CIDR"

else
    DCOS_CIDR=""
    SPARTAN_CIDR=""
    echo ""
fi



DOCKER_INTERFACE=docker0

echo "Docker Interface: $DOCKER_INTERFACE"

echo "Please enter a list of static IP addresses used for remote administration. These IPs should be comma separated"
echo ""
read -e -p "Static IPs of remote admin IP machines: " REMOTE_IPS
echo ""
echo "You may also provide a list of machine names to attempt to look up in order to add to the remote IPs list. This list should be comma separated as well and resolveable from the cluster"
echo "This list does not have to include machine that have static IPs and already included above, this list is for remote admin boxes with dynamic IPs that could change quite a bit"
echo ""
read -e -p "List of remote admin machine names: " REMOTE_NAMES
echo ""
echo "in addition to full access for remote machines just specified, you can also choose to allow full access from the world to port 22 for SSH"
echo "There are benefits and risks to this, please choose wisely, the default is N (More secure) but if your remote machine IP changes alot, it can make it so you can't access your cluster"
echo "If your IP changes quite a bit, you may want to answer yes here"
echo ""
read -e -p "Allow access to port 22 (SSH) to the world in addition to remote IPs? (Y/N): " -i "N" REMOTE_ALL_SSH
echo ""
if [ "$DOCKER_PROXY" != "" ]; then
    PROXY_HOST=$(echo $DOCKER_PROXY|sed "s@https://@@g"|sed "s@http://@@g"|grep -o -P "(^|@)([^:]+)"|sed "s/@//g")
    PROXY_PORT=$(echo $DOCKER_PROXY|sed "s@https://@@g"|sed "s@http://@@g"|cut -d":" -f2)
    echo "The Docker proxy is set to be $DOCKER_PROXY"
    echo "Host for the proxy is likely: $PROXY_HOST"
    echo "Please enter the IP address of the Proxy used here (or validate, we attempt to resolve the IP)"
    PROXY_IP=$(nslookup $PROXY_HOST | awk '/^Address: / { print $2 ; exit }')
    read -e -p "Please enter or validate the proxy IP: " -i "$PROXY_IP" PROXY_IP
    echo ""
    read -e -p "Please enter or validate the proxy port: " -i "$PROXY_PORT" PROXY_PORT
    echo ""
else
    PROXY_IP=""
    PROXY_PORT=""
fi
echo ""
echo "In addition to a proxy, we can also allow direct connections off agent boxes. If you are using a proxy, this is likely not required, with no proxy, you will need to answer Y (the default)"
read -e -p "Allow direct outbound connections from ports 80 and 443? (Y/N): " -i "Y" ALLOW_DIRECT_WEB

echo ""
echo ""
echo "***********************************************"
echo ""
echo "By default, nodes are treated the same from a firewall perspectice with the exception of EDGE_NODES"
echo ""
echo "EDGE_NODES typically run a load balancer or other service to provide cluster services to outside hosts"
echo "If you specified Public (DCOS Only) nodes, you'll want to use these as your edge nodes"
echo "Otherwise, pick a couple of edge nodes from the Agent list to act as edge nodes, please specify IP addresses with comma separating"
echo ""
echo "Public nodes: $PUBLIC_NODES"
echo ""
echo "Available Agent Nodes: $AGENT_NODES"
echo ""
read -e -p "Please specify your edge nodes (the nodes to run the load balancer (installed later)): " -i "$PUBLIC_NODES" EDGE_NODES
echo ""

echo ""
FW_SCRIPT_DIR="./conf/firewall"
FW_SCRIPT_SRC="${FW_SCRIPT_DIR}/firewall.sh"
FW_SCRIPT_DST="/etc/firewall.sh"
FW_SCRIPT_TMP_DIR="/home/$IUSER/firewall"
FW_SCRIPT_TMP="${FW_SCRIPT_TMP_DIR}/firewall.sh"
FW_CUSTOM_DIR="$FW_SCRIPT_DIR/custom"
SERVICES_CONF="$FW_SCRIPT_DIR/services.conf"

echo ""
echo "Firewall Script Temp Location: $FW_SCRIPT_SRC"

cat > $NETWORK_CONF << EOP
#!/bin/bash
DNS_SERVERS="$DNS_SERVERS"
NTP_SERVERS="$NTP_SERVERS"

ZETA_CIDR_ROUTABLE="$ZETA_CIDR_ROUTABLE"
ZETA_CIDR_NONROUTABLE="$ZETA_CIDR_NONROUTABLE"

REMOTE_IPS="$REMOTE_IPS"
REMOTE_NAMES="$REMOTE_NAMES"
REMOTE_ALL_SSH="$REMOTE_ALL_SSH"

EDGE_NODES="$EDGE_NODES"
SERVICES_CONF="$SERVICES_CONF"

DCOS_CIDR="$DCOS_CIDR"
SPARTAN_CIDR="$SPARTAN_CIDR"
DOCKER_CIDR="$DOCKER_CIDR"
DOCKER_INTERFACE="$DOCKER_INTERFACE"

PROXY_IP="$PROXY_IP"
PROXY_PORT="$PROXY_PORT"
ALLOW_DIRECT_WEB="$ALLOW_DIRECT_WEB"

FW_SCRIPT_DIR="$FW_SCRIPT_DIR"
FW_SCRIPT_SRC="$FW_SCRIPT_SRC"
FW_SCRIPT_TMP_DIR="$FW_SCRIPT_TMP_DIR"
FW_SCRIPT_TMP="$FW_SCRIPT_TMP"
FW_SCRIPT_DST="$FW_SCRIPT_DST"
FW_CUSTOM_DIR="$FW_CUSTOM_DIR"

FW_FIRST_RUN="0"
NETWORK_LOCKED="1"
EOP

@go.log INFO "Network conf created at $NETWORK_CONF"

