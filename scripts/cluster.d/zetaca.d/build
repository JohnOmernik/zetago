#!/bin/bash
#
# cluster zetaca build - Build the ZetaCA docker container per the cluster_zetaca.conf
#
#

sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"
sourceconf "$FS_CONF"
sourceconf "$FS_PROVIDER_CONF"
sourceconf "$CLUSTER_CONF"
sourceconf "$CLUSTER_ZETACA_CONF"

function _zetaca_build () {
    if [ ! -f "./vers/zetaca/$ZETACA_VERS" ]; then
        @go.log FATAL "Cannot find conf specified vers file: $ZETACA_VERS - Exiting"
    fi
    . ./vers/zetaca/$ZETACA_VERS

    BUILD_TMP="./tmp_build"
    DCK=$(sudo docker images|grep zetaca)

    if [ "$DCK" == "" ]; then
        BUILD="Y"
    else
        echo "The docker image already appears to exist, do you wish to rebuild?"
        echo "$DCK"
        read -e -p "Rebuild Docker Image? " -i "N" BUILD
    fi
    if [ "$BUILD" == "Y" ]; then
        rm -rf $BUILD_TMP
        mkdir -p $BUILD_TMP
        cd $BUILD_TMP

        if [ "$DOCKER_PROXY" != "" ]; then
            DOCKER_LINE1="ENV http_proxy=$DOCKER_PROXY"
            DOCKER_LINE2="ENV HTTP_PROXY=$DOCKER_PROXY"
            DOCKER_LINE3="ENV https_proxy=$DOCKER_PROXY"
            DOCKER_LINE4="ENV HTTPS_PROXY=$DOCKER_PROXY"
            DOCKER_LINE5="ENV NO_PROXY=$DOCKER_NOPROXY"
            DOCKER_LINE6="ENV no_proxy=$DOCKER_NOPROXY"
        else
            DOCKER_LINE1=""
            DOCKER_LINE2=""
            DOCKER_LINE3=""
            DOCKER_LINE4=""
            DOCKER_LINE5=""
            DOCKER_LINE6=""
        fi
cat > ./Dockerfile << EOS
FROM ubuntu:xenial

RUN adduser --disabled-login --gecos '' --uid=2500 ${IUSER}

$DOCKER_LINE1
$DOCKER_LINE2
$DOCKER_LINE3
$DOCKER_LINE4
$DOCKER_LINE5
$DOCKER_LINE6

RUN gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
RUN apt-get update && apt-get install -y curl openssl libreadline6 libreadline6-dev zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config git && rm -rf /var/lib/apt/lis$
RUN \curl -sSL https://get.rvm.io | bash -s stable --ruby
RUN git clone $APP_SOURCE_GIT /root/ca_rest
WORKDIR /root/ca_rest
RUN mkdir -p /root/ca_rest/tmp && chmod 777 /root/ca_rest/tmp
RUN /bin/bash -l -c "rvm requirements"
RUN /bin/bash -l -c "gem install sinatra rest-client"
EXPOSE 80 443
EOS
        sudo docker build -t $APP_IMG .
        @go.log INFO "Built Local zetaca image $APP_IMG"
        cd ..
        rm -rf $BUILD_TMP
    else
        @go.log INFO "Not building zetaca image"
    fi



}
_zetaca_build "$@"
