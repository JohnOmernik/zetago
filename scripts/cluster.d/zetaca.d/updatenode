#!/bin/bash
#
# cluster zetaca update node - Update Nodes to use ZetaCA Certificates
#
# Arguments:
# -a                # Run on all nodes in dcos.conf
# -u                # Run without prompting (unattended)
# %CSVLISTOFNODES%  # A list of nodes to run on. Will be ignored if -a is specified
#
#
sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"
sourceconf "$FS_CONF"
sourceconf "$FS_PROVIDER_CONF"
sourceconf "$CLUSTER_CONF"
sourceconf "$CLUSTER_ZETACA_CONF"


function _updatenodesca() {
    CURUSER=$(whoami)

    if [ "$CURUSER" != "${IUSER}" ]; then
        @go.log FATAL "Must use ${IUSER} user"
    fi

    UNATTEND="0"
    ALL="0"

    for i in "$@"
    do
        case $i in
            -a)
            ALL="1"
            ;;
            -u)
            UNATTEND="1"
            ;;
            *)
            ARG_NODES=$i
            # unknown option
            ;;
        esac
    done

    if [ "$ALL" == "1" ]; then
        RUN_NODES="$INTERNAL_NODES"
    else
        RUN_NODES=$(echo $ARG_NODES|tr "," " ")
    fi

    if [ "$RUN_NODES" == "" ]; then
        @go.log FATAL "Please provide a CSV list of nodes or -a"
    fi



    # Iterate through each node specified in the hosts argument and check to see if the user is root or not
    echo ""
    echo "-------------------------------------------------------------------"
    echo "Status of requested Nodes. If root is listed, permissions are setup correctly"
    echo "-------------------------------------------------------------------"

    CHOSTS=$(echo "$HOSTS"|tr "," " ")

    for NODE in $RUN_NODES; do
        OUT=$(ssh -t -t -n -o StrictHostKeyChecking=no $NODE "$PRIV_CMD whoami" 2> /dev/null)
        echo "$NODE     $OUT"
    done

    echo "-------------------------------------------------------------------"
    echo ""
    echo "If any of the above nodes do not say root next to the name, then the permissions are not set correctly" 
    echo "If permissions are not set correctly, this script will not run well."

    # Verify that the user wants to continue
    if [ "$UNATTEND" == "1" ]; then
        echo "Unattended requested, I hope your permissions are correct!"
    else
        echo ""
        read -p "Do you wish to proceed with this script? Y/N: " OURTEST
        echo ""
        if [ "$OURTEST" != "Y" ] && [ "$OURTEST" != "y" ]; then
            @go.log FATAL "User decided to cancel zetaca update - exiting"
        fi
    fi


    RUN_INIT="N"
    for NODE in $RUN_NODES; do
        if [ "$NODE" != "$ZETACA_IP" ]; then
            @go.log INFO "Updating root certificates on $NODE"
            echo "Updating and adding cert to $NODE"
            ssh $NODE "$PRIV_CMD rm -f /usr/local/share/ca-certificates/zetaroot.crt && $PRIV_CMD update-ca-certificates -f && $PRIV_CMD curl -o /usr/local/share/ca-certificates/zetaroot.crt http://zetaca-shared.marathon.slave.mesos:10443/cacert && $PRIV_CMD update-ca-certificates && cat /etc/ssl/certs/zetaroot.pem|$PRIV_CMD tee -a /opt/mesosphere/active/python-requests/lib/python3.5/site-packages/requests/cacert.pem && $PRIV_CMD service docker restart"
        else
            @go.log INFO "Skipping Node with Zeta CA - Will run at end"
            RUN_INIT="Y"
        fi
    done
    if [ "$RUN_INIT" == "Y" ]; then
        @go.log INFO "Running on Zeta CA Node: We update the certs, then we stop Zeta CA prior to docker restart"
        ssh $ZETACA_IP "$PRIV_CMD rm -f /usr/local/share/ca-certificates/zetaroot.crt && $PRIV_CMD update-ca-certificates -f && $PRIV_CMD curl -o /usr/local/share/ca-certificates/zetaroot.crt http://zetaca-shared.marathon.slave.mesos:10443/cacert && $PRIV_CMD update-ca-certificates && cat /etc/ssl/certs/zetaroot.pem|$PRIV_CMD tee -a /opt/mesosphere/active/python-requests/lib/python3.5/site-packages/requests/cacert.pem"
        @go.log INFO "Stopping Zeta CA"
        ./zeta cluster marathon scale "shared/zetaca" 0 "$MARATHON_SUBMIT" 1
        @go.log INFO "Restarting docker on $ZETACA_IP"
        ssh $ZETACA_IP "$PRIV_CMD service docker restart"
        @go.log INFO "Starting Zeta CA Again"
        ./zeta cluster marathon scale "shared/zetaca" 1 "$MARATHON_SUBMIT" 1
        checkapi "${ZETA_CA_CERT}"
    fi
    @go.log INFO "Zeta CA Node update complete"

}

_updatenodesca "$@"
