#!/bin/bash
#
# marathon delete
# This takes two arguments
# - Marathon ID
# - MARATHON Submit URL
# - Optional Wait for Deployment to finish - Put 1 if you want to wait
#
# Example: ./zeta cluster marathon delete myrole/myapp http://marathon.mesos:8080/v2/apps
sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"
sourceconf "$FS_CONF"
sourceconf "$FS_PROVIDER_CONF"
sourceconf "$CLUSTER_CONF"

function _marathon_delete() {

    MARID=$1
    MARATHON_URL=$2
    if [ "$MARATHON_URL" != "" ]; then
        if [ "$MARATHON_URL" == "1" ]; then
            WAIT="1"
            MARATHON_URL=""
        else
            WAIT=$3
        fi
    fi

    if [ "$MARATHON_URL" == "" ]; then
        @go.log WARN "No MARATHON_URL provided using cluster default in $CLUSTER_CONF"
        MARATHON_URL="http://$MARATHON_HOST/v2/groups"
    fi

    MARATHON_DEP="http://$MARATHON_HOST/v2/deployments"
    echo "Destroying group ${MARATHON_URL}/$MARID"
    OUT=$(curl -s -X DELETE ${MARATHON_URL}/${MARID} -H "Content-type: application/json")

    DEP_ID=$(echo $OUT|grep -P -o "deploymentId\":\"[^\"]+\""|cut -f2 -d":"|sed "s/\"//g")
    if [ "$DEP_ID" != "" ]; then
        if [ "$WAIT" == "1" ]; then
            @go.log INFO "Waiting for app destroy request on ID $MARID to finish deployment with ID $DEP_ID"

            DEPLOY=$(curl -s -H "Content-type: application/json" -X GET ${MARATHON_DEP}|grep "$DEP_ID")
            while [ "$DEPLOY" != "" ]; do
                @go.log INFO "Waiting in a loop for Deployment: $DEP_ID to finish"
                sleep 2
                DEPLOY=$(curl -s -H "Content-type: application/json" -X GET ${MARATHON_DEP}|grep "$DEP_ID")
            done
            echo ""
            @go.log INFO "Destroy application Deployement with ID $DEP_ID complete"
        else
            @go.log INFO "Destroy application $MARID request submitted - Not waiting to finish deployment"
        fi
    else
        @go.log WARN "No Deployment ID returned, the destroy may not have worked..."
    fi
}

_marathon_delete "$@"







