#!/bin/bash
#
# Update a host to use LDAP Settings from Cluster
#
# Arguments:
# -n=%HOSTLISTSEPBYCOMMAS% example: -n=node1,node2,node3
# -u - Unattended installation (don't ask questions just install on the nodes provided)
#
sourceconf "$PREP_CONF"
sourceconf "$DCOS_CONF"
sourceconf "$NETWORK_CONF"
sourceconf "$FS_CONF"
sourceconf "$FS_PROVIDER_CONF"
sourceconf "$CLUSTER_CONF"
sourceconf "$CLUSTER_ZETACA_CONF"
sourceconf "$CLUSTER_BASE_CONF"

function _displayhelp(){
    echo "cluster hostldapupdate - Update ldap settings on list of hosts"
    echo "===================================================================================================="
    echo ""
    echo "Arguments:"
    echo "-n=\"node1,node2\"  - Comma sep list of hosts to run ldap settings on "
    echo "-h                  - Display this help"
    echo "-u                  - Unattended Install (Don't prompt)"
    echo ""
    echo "Usage:"
    echo "./zeta cluster hostldapupdate -n=\"node1,node2\""
    echo ""
}





function _hostldapupdate() {

    CURUSER=$(whoami)


    if [ "$CURUSER" != "${IUSER}" ]; then
        echo "Must use ${IUSER}: User: $CURUSER"
    fi

    DISPLAYHELP="0"
    UNATTEND="0"
    NODE_HOST=""

    for i in "$@"
        do
        case $i in
            -u)
            UNATTEND="1"
            ;;
            -h)
            DISPLAYHELP="1"
            ;;
            "-n="*)
            CHOSTS="${i#*=}"
            ;;
            *)
            # unknown option
            ;;
        esac
    done
    if [ "$DISPLAYHELP" == "1" ]; then
        _displayhelp
        exit 0
    fi
    HOSTS=$(echo "$CHOSTS"|tr "," " ")

    if [ "$HOSTS" == "" ]; then
        @go.log FATAL "This script requires a list of hosts, separated by commas passed in -h=%hostlist%"
    fi


    # Iterate through each node specified in the hosts argument and check to see if the user is root or not
    echo ""
    echo "-------------------------------------------------------------------"
    echo "Status of requested Nodes. If root is listed, permissions are setup correctly"
    echo "-------------------------------------------------------------------"


    for HOST in $HOSTS; do
        OUT=$(ssh -t -t -n -o StrictHostKeyChecking=no $HOST "$PRIV_CMD whoami" 2> /dev/null)
        echo "$HOST     $OUT"
    done

    echo "-------------------------------------------------------------------"
    echo ""
    echo "If any of the above nodes do not say root next to the name, then the permissions are not set correctly" 
    echo "If permissions are not set correctly, this script will not run well."



    # Verify that the user wants to continue
    if [ "$UNATTEND" == "1" ]; then
        @go.log INFO "Unattended Installation requested: installing"
    else
        read -p "Do you wish to proceed with this script? Y/N: " OURTEST

        if [ "$OURTEST" != "Y" ] && [ "$OURTEST" != "y" ]; then
            @go.log FATAL "User choose not to install LDAP on hosts"
        fi
    fi

echo ""
echo "Creating LDAP Update Script"

SCRIPTSRC="./bin/ldapupdate.sh"
SCRIPTDST="/home/${IUSER}/ldapupdate.sh"

cat > $SCRIPTSRC << EOF
#!/bin/bash
DIST_CHK=\$(egrep -i -ho 'ubuntu|redhat|centos' /etc/*-release | awk '{print toupper(\$0)}' | sort -u)
UB_CHK=\$(echo \$DIST_CHK|grep UBUNTU)
RH_CHK=\$(echo \$DIST_CHK|grep REDHAT)
CO_CHK=\$(echo \$DIST_CHK|grep CENTOS)

if [ "\$UB_CHK" != "" ]; then
    INST_TYPE="ubuntu"
    echo "Ubuntu"
elif [ "\$RH_CHK" != "" ] || [ "\$CO_CHK" != "" ]; then
    INST_TYPE="rh_centos"
    echo "Redhat"
else
    echo "Unknown lsb_release -a version at this time only ubuntu, centos, and redhat is supported"
    echo \$DIST_CHK
    exit 1
fi

echo "\$INST_TYPE"

if [ "\$INST_TYPE" == "ubuntu" ]; then
   $PRIV_CMD DEBIAN_FRONTEND=noninteractive apt-get install -qq -y libpam-ldapd libnss-ldapd nscd

   $PRIV_CMD tee /usr/share/pam-configs/my_mkhomedir << EOL
Name: activate mkhomedir
Default: yes
Priority: 900
Session-Type: Additional
Session:
        required                                 pam_mkhomedir.so umask=0022 skel=/etc/skel

EOL

$PRIV_CMD tee /etc/ldap.conf << EOR
# The distinguished name of the search base.
base dc=marathon,dc=mesos
# Another way to specify your LDAP server is to provide an
uri ldap://openldap-shared.marathon.slave.mesos
# The LDAP version to use (defaults to 3 if supported by client library)
ldap_version 3
pam_password md5
bind_policy soft
binddn cn=readonly,dc=marathon,dc=mesos
bindpw readonly
EOR

$PRIV_CMD tee /etc/nslcd.conf << EON
# /etc/nslcd.conf
# nslcd configuration file. See nslcd.conf(5)
# for details.

# The user and group nslcd should run as.
uid nslcd
gid nslcd

# The location at which the LDAP server(s) should be reachable.
uri ldap://openldap-shared.marathon.slave.mesos

# The search base that will be used for all queries.
base dc=marathon,dc=mesos

# The LDAP protocol version to use.
ldap_version 3

# The DN to bind with for normal lookups.
binddn cn=readonly,dc=marathon,dc=mesos
bindpw readonly

# The DN used for password modifications by root.
#rootpwmoddn cn=admin,dc=example,dc=com

# SSL options
#ssl off
#tls_reqcert never
tls_cacertfile /etc/ssl/certs/ca-certificates.crt

# The search scope.
#scope sub

EON

$PRIV_CMD DEBIAN_FRONTEND=noninteractive pam-auth-update

$PRIV_CMD sed -i "s/compat/compat ldap/g" /etc/nsswitch.conf

$PRIV_CMD /etc/init.d/nscd restart
$PRIV_CMD service nslcd restart
$PRIV_CMD $FS_PROVIDER_FUSE_SVC restart
$PRIV_CMD service dcos-mesos-slave restart
$PRIV_CMD service dcos-mesos-slave-public restart
elif [ "\$INST_TYPE" == "rh_centos" ]; then
   echo "Needs work"
else
    echo "Release not found, not sure why we are here, exiting"
    exit 1
fi

EOF

    chmod +x $SCRIPTSRC

    for HOST in $HOSTS; do
        @go.log INFO "Running LDAP Host Update on $HOST"
        scp $SCRIPTSRC $HOST:$SCRIPTDST
        ssh $HOST "chmod +x $SCRIPTDST && $SCRIPTDST && rm $SCRIPTDST"
    done

}


_hostldapupdate "$@"
