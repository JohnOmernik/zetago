#!/bin/bash

APP_VER="2.4.4"

APP_DEB_ROOT="https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/${APP_VER}/"
APP_DEB_FILE="elasticsearch-${APP_VER}.deb"

APP_APT_KEY="46095ACC8548582C1A2699A9D27D666CD88E42B4"
APP_APT_KEYSRV="pgp.mit.edu"

APP_IMG_NAME="elasticsearch"
APP_IMG_TAG="$APP_VER"

APP_IMG="${ZETA_DOCKER_REG_URL}/${APP_IMG_NAME}:${APP_IMG_TAG}"
REQ_APP_IMG_NAME="zetabase"

APP_ES_PLUGINS="royrusso/elasticsearch-HQ"

if [ "$BUILD" == "Y" ]; then
    if [ "$ZETA_DOCKER_PROXY" != "" ]; then
        parseproxy "$ZETA_DOCKER_PROXY" "M_HOST" "M_PORT" "M_USER" "M_PASS"
        DOCKERLINE="-Dhttp.proxyHost=$M_HOST -Dhttp.proxyPort=$M_PORT -Dhttps.proxyHost=$M_HOST -Dhttps.proxyPort=$M_PORT"
        if [ "$M_USER" != "" ]; then
            DOCKERLINE="$DOCKERLINE -Dhttp.proxyUser=$M_USER -Dhttp.proxyPassword=$M_PASS -Dhttps.proxyUser=$M_USER -Dhttps.proxyPassword=$M_PASS "
        fi
    else
        DOCKERLINE=""
    fi



    if [ "$APP_ES_PLUGINS" != "" ]; then
        PINST="RUN cd /usr/share/elasticsearch/bin"
        for P in $APP_ES_PLUGINS; do
            PINST="${PINST} && ./plugin ${DOCKERLINE}install ${P}"
        done
    else
        PINST=""
    fi


cat > ./Dockerfile << EOF
FROM ${ZETA_DOCKER_REG_URL}/${REQ_APP_IMG_NAME}

RUN apt-key adv --keyserver ${APP_APT_KEYSRV} --recv-keys ${APP_APT_KEY} && wget ${APP_DEB_ROOT}${APP_DEB_FILE} && dpkg -i $APP_DEB_FILE && rm -f ${APP_DEB_FILE}

$PINST

WORKDIR /usr/share/elasticsearch

RUN set -ex && for path in data logs config config/scripts; do \
        mkdir -p "\$path"; \
        chown -R ${IUSER}:${IUSER} "\$path"; \
    done

ENV PATH=\$PATH:/usr/share/elasticsearch/bin

CMD ["elasticsearch"]

EOF

fi
