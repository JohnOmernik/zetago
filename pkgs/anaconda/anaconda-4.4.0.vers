#!/bin/bash

APP_VER="4.4.0"
APP_IMG_TAG="${APP_VER}"
APP_IMG_NAME="anaconda"
REQ_APP_IMG_NAME="zetabase"

# Build both Python2 + Python3 images
# Each ver. >=2GB thus would be bloat for both in  1
APP_IMG_NAME1="anaconda2"
APP_IMG_NAME2="anaconda3"
APP_IMG1="${ZETA_DOCKER_REG_URL}/${APP_IMG_NAME1}:${APP_IMG_TAG}"
APP_IMG2="${ZETA_DOCKER_REG_URL}/${APP_IMG_NAME2}:${APP_IMG_TAG}"
APP_URL1="https://repo.continuum.io/archive/Anaconda2-${APP_VER}-Linux-x86_64.sh"
APP_URL2="https://repo.continuum.io/archive/Anaconda3-${APP_VER}-Linux-x86_64.sh"
APP_URL1_SHA256="2d30b91ed4d215b6b4a15162a3389e9057b15445a0c02da71bd7bd272e7b824e"
APP_URL2_SHA256="3301b37e402f3ff3df216fe0458f1e6a4ccbb7e67b4d626eae9651de5ea3ab63"

echo "Vers Sourced: BUILD: $BUILD"



if [ "$BUILD" == "Y" ]; then

cat > ./Dockerfile << EOL
FROM ${ZETA_DOCKER_REG_URL}/${REQ_APP_IMG_NAME}
MAINTAINER Naveen Manivannan <naveen.manivannan@gmail.com>

WORKDIR /tmp
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8 PATH=/opt/conda/bin:\$PATH

RUN apt-get update -qqy --fix-missing && apt-get install -qqy wget bzip2 nano vim ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion && \
    echo 'export PATH=/opt/conda/bin:\$PATH' > /etc/profile.d/conda.sh && \
    wget --quiet $APP_URL1 -O /tmp/anaconda.sh && \
    echo "${APP_URL1_SHA256} anaconda.sh" | sha256sum -c && \
    /bin/bash /tmp/anaconda.sh -b -p /opt/conda && rm /tmp/anaconda.sh && rm -rf /var/lib/apt/lists/*
EOL
sudo docker build --rm -t ${APP_IMG1} .
sudo docker push ${APP_IMG1}
rm ./Dockerfile

cat > ./Dockerfile << EOF
FROM ${ZETA_DOCKER_REG_URL}/${REQ_APP_IMG_NAME}
MAINTAINER Naveen Manivannan <naveen.manivannan@gmail.com>

WORKDIR /tmp
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8 PATH=/opt/conda/bin:\$PATH

RUN apt-get update -qqy --fix-missing && apt-get install -qqy wget nano vim bzip2 ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion && \
    echo 'export PATH=/opt/conda/bin:\$PATH' > /etc/profile.d/conda.sh && \
    wget --quiet $APP_URL2 -O /tmp/anaconda.sh && \
    echo "${APP_URL2_SHA256} anaconda.sh" | sha256sum -c && \
    /bin/bash /tmp/anaconda.sh -b -p /opt/conda && rm /tmp/anaconda.sh && rm -rf /var/lib/apt/lists/*
EOF

sudo docker build --rm -t ${APP_IMG2} .
sudo docker push ${APP_IMG2}
rm ./Dockerfile

if [ "$BUILD_SPARK" == "Y" ]; then
    echo "Building Spark based anaconda images as well"
    CURIMG="${ZETA_DOCKER_REG_URL}/anaspark2:$APP_VER"
    echo "Building $CURIMG"
cat > ./requirements.txt << EOC
kafka-python
lz4tools
memory-profiler
pandas
pyarrow
requests
xxhash
EOC

cat >./Dockerfile << EOS
FROM ${APP_IMG1}
WORKDIR /tmp

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get update -qqy --fix-missing && \
    apt-get install -qqy gcc libnss3 git curl && \
    apt-get clean && apt-get autoremove -qqy && \
    rm -rf /var/lib/apt/lists/*

ADD requirements.txt requirements.txt
RUN pip install -r requirements.txt
CMD ["/bin/bash"]
EOS

    sudo docker build --rm -t $CURIMG .
    sudo docker push $CURIMG
    rm ./Dockerfile
echo "Next"
    CURIMG="${ZETA_DOCKER_REG_URL}/anaspark3:$APP_VER"
    echo "Building $CURIMG"
cat > ./requirements.txt << EOB
kafka-python
lz4tools
memory-profiler
pandas
pyarrow
requests
xxhash
EOB

cat > ./Dockerfile << EOW
FROM ${APP_IMG2}
WORKDIR /tmp

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get update -qqy --fix-missing && \
    apt-get install -qqy gcc libnss3 git curl && \
    apt-get clean && apt-get autoremove -qqy && \
    rm -rf /var/lib/apt/lists/*

ADD requirements.txt requirements.txt
RUN pip install -r requirements.txt
CMD ["/bin/bash"]
EOW

    sudo docker build --rm -t $CURIMG .
    sudo docker push $CURIMG
    rm ./Dockerfile


fi
fi 
